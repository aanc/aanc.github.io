<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Howto on nknu.net</title>
    <link>https://aanc.github.io/tags/howto/</link>
    <description>Recent content in Howto on nknu.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 12 Apr 2016 12:30:23 +0000</lastBuildDate>
    <atom:link href="https://aanc.github.io/tags/howto/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>How to mount your android phone on fedora 23 using simple-mtpfs</title>
      <link>https://aanc.github.io/mount-nexus5-on-fedora23-using-simple-mtpfs/</link>
      <pubDate>Tue, 12 Apr 2016 12:30:23 +0000</pubDate>
      
      <guid>https://aanc.github.io/mount-nexus5-on-fedora23-using-simple-mtpfs/</guid>
      <description>&lt;p&gt;On recent Fedora versions, it should works out of the box: you plug the phone, the system detects it and opens a file explorer allowing you to browse your device&amp;rsquo;s content.&lt;/p&gt;

&lt;p&gt;However, if for some reason you want to mount the phone using &lt;code&gt;simple-mtpfs&lt;/code&gt;, you can proceed as follow.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install &lt;code&gt;simple-mtpfs&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;dnf install simple-mtpfs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : you also need the packages &lt;code&gt;fuse fuse-libs libmtp&lt;/code&gt;, but chances are that they are already installed on your system.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Connect your device (in my case, a LG Nexus 5), and do a &lt;code&gt;dmesg | tail&lt;/code&gt; :
&lt;code&gt;
[ 4158.530224] usb 4-1.7.2: new high-speed USB device number 4 using ehci-pci
[ 4158.616409] usb 4-1.7.2: New USB device found, idVendor=18d1, idProduct=4ee1
[ 4158.616415] usb 4-1.7.2: New USB device strings: Mfr=1, Product=2, SerialNumber=3
[ 4158.616418] usb 4-1.7.2: Product: Nexus 5
[ 4158.616421] usb 4-1.7.2: Manufacturer: LGE
[ 4158.616423] usb 4-1.7.2: SerialNumber: xxxxxxxxxxxxxxxxxxxxxx
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Write down the &lt;code&gt;idVendor&lt;/code&gt; and &lt;code&gt;idProduct&lt;/code&gt; values.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create file &lt;code&gt;/etc/udev/rules.d/10-phone.rules&lt;/code&gt;
&lt;code&gt;
SUBSYSTEM==&amp;quot;usb&amp;quot;, ATTR{idVendor}==&amp;quot;18d1&amp;quot;, ATTR{idProduct}=&amp;quot;4ee1&amp;quot;, SYMLINK=&amp;quot;nexus5&amp;quot;
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Make sure to replace the &lt;code&gt;ATTR{idVendor}&lt;/code&gt; and &lt;code&gt;ATTR{idProduct}&lt;/code&gt; values with the one you got from the &lt;code&gt;dmesg | tail&lt;/code&gt; command, and the &lt;code&gt;SYMLINK&lt;/code&gt; value with whatever you want - it will be the name of the symbolic link udev will create in your &lt;code&gt;/dev&lt;/code&gt; folder, pointing to your device.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;reload udev rules :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo udevadm control --reload-rules
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;unplug/replug your device. You should now have a file in &lt;code&gt;/dev&lt;/code&gt; named as requested in the udev rules file created earlier.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls -l /dev/nexus5
lrwxrwxrwx. 1 root root 15 Jan 12 10:44 /dev/nexus5 -&amp;gt; bus/usb/004/005
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Make sure the phone is in MTP mode. You can check that directly on the phone, on your notification area, you should have a notification saying &amp;ldquo;USB for file transfers&amp;rdquo; (or something similar). If you have &amp;ldquo;USB for charging&amp;rdquo;, tap on the notification, and on the poping menu select &amp;ldquo;USB for file transfers (MTP)&amp;rdquo;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://aanc.github.io/content/images/2016/mount-android-phone-on-fedora-using-simplemtp/phone-mtp-config.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mount the phone
```
$ simple-mtpfs /dev/nexus5 /tmp/test
$ ls /tmp/test&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Alarms    cinegroup          Documents      Movies         panoramas      Ringtones   vervewireless
  &amp;hellip;
```&lt;/p&gt;

&lt;p&gt;Et voil√†!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Proxy configuration for Docker on CentOS 7</title>
      <link>https://aanc.github.io/proxy-configuration-for-docker-on-centos-7/</link>
      <pubDate>Wed, 10 Sep 2014 10:57:23 +0000</pubDate>
      
      <guid>https://aanc.github.io/proxy-configuration-for-docker-on-centos-7/</guid>
      <description>&lt;p&gt;We saw earlier how to &lt;a href=&#34;http://nknu.net/running-docker-behind-a-proxy-on-ubuntu-14-04/&#34;&gt;configure the proxy for docker on Ubuntu 14.04&lt;/a&gt;, let&amp;rsquo;s now see how to do that on CentOS 7.&lt;/p&gt;

&lt;p&gt;Edit &lt;code&gt;/etc/sysconfig/docker&lt;/code&gt; and add the following lines:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;HTTP_PROXY=&#39;http://user:password@proxy-host:proxy-port&#39;
HTTPS_PROXY=&#39;http://user:password@proxy-host:proxy-port&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For those settings to be taken into account, you&amp;rsquo;ll need to restart your docker daemon:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# systemctl restart docker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You may still need to declare the proxy in the Dockerfile too, as seen &lt;a href=&#34;http://nknu.net/running-docker-behind-a-proxy-on-ubuntu-14-04/&#34;&gt;in the Ubuntu article&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 14.04: How to open ssh:// links in a terminal</title>
      <link>https://aanc.github.io/ubuntu-14-04-how-to-open-ssh-links-in-a-terminal/</link>
      <pubDate>Thu, 07 Aug 2014 12:05:32 +0000</pubDate>
      
      <guid>https://aanc.github.io/ubuntu-14-04-how-to-open-ssh-links-in-a-terminal/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;re using a web based tool to manage your servers, chances are that this tool is providing &lt;code&gt;ssh://&lt;/code&gt; links to connect directly to those server with one click from your web browser. Let&amp;rsquo;s see how to setup Ubuntu 14.04 so it can handle this type of link.&lt;/p&gt;

&lt;p&gt;First we need a script which is able to process a string like &amp;ldquo;ssh://user@host:port&amp;rdquo;. Create a file named &lt;code&gt;ssh-handler.sh&lt;/code&gt; somewhere in your home directory (ie. &lt;code&gt;~/.local/bin/ssh-handler.sh&lt;/code&gt; - I tend to put my custom executables in &lt;code&gt;~/.local/bin&lt;/code&gt;, and I added that to my &lt;code&gt;PATH&lt;/code&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh
d=${1#ssh://}
gnome-terminal -e &amp;quot;ssh $d&amp;quot; &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Make it executable with a &lt;code&gt;chmod a+x ~/.local/bin/ssh-handler.sh&lt;/code&gt;.
If you want to test it, open an &lt;code&gt;xterm&lt;/code&gt; (so we can make sure the script will open gnome-terminal by itself), and execute &lt;code&gt;~/.local/bin/ssh-handler.sh ssh://localhost&lt;/code&gt;. This should open a gnome-terminal window, prompting you for your local password (provided that you have an sshd running on your local machine).&lt;/p&gt;

&lt;p&gt;Now we need to create a &lt;code&gt;.desktop&lt;/code&gt; file which will use the handler we just created. Create a file in &lt;code&gt;~/.local/share/applications/&lt;/code&gt; named &lt;code&gt;ssh-handler.desktop&lt;/code&gt;, with the following content:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[Desktop Entry]
Type=Application
Name=SSH Handler
Exec=ssh-handler.sh %u
Icon=utilities-terminal
StartupNotify=false
MimeType=x-scheme-handler/ssh;
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: if your &lt;code&gt;~/.local/bin&lt;/code&gt; folder is not in your PATH variable, you will have to specify the full path of the &lt;code&gt;ssh-handler.sh&lt;/code&gt; script in the &lt;code&gt;Exec=&lt;/code&gt; line, ie. &lt;code&gt;Exec=/home/adrien/.local/bin/ssh-handler.sh&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once this file is created, the last step is to tell the system that the SSH links should be handled by default by this desktop entry. Before we do that, it can be a good idea to check that nothing is currently handling the SSH protocol, or if something is handling it make sure that we can replace it safely. To check that, run the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xdg-mime query default x-scheme-handler/ssh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If the output is blank, we&amp;rsquo;re good ! It not, use your best judgement to decide if you want to replace it or not.&lt;/p&gt;

&lt;p&gt;Now we can run the following command to define our &lt;code&gt;ssh-handler.desktop&lt;/code&gt; file as the default handler for ssh protocol:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xdg-mime default ssh-handler.desktop x-scheme-handler/ssh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And that&amp;rsquo;s it ! Clicking on &lt;code&gt;ssh://...&lt;/code&gt; links in your browser should now directly open a terminal window and connect to the specified host.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Git: setup a remote repo from a local repo</title>
      <link>https://aanc.github.io/git-setup-a-remote-repo-from-a-local-repo/</link>
      <pubDate>Wed, 16 Jul 2014 17:19:44 +0000</pubDate>
      
      <guid>https://aanc.github.io/git-setup-a-remote-repo-from-a-local-repo/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s assume you started a new project. You&amp;rsquo;re using Git for versionning, because it&amp;rsquo;s easy to set it up locally, and for a few hours/days/weeks you&amp;rsquo;re just happy with your local repository. However, now you need to go bigger and start sharing the code with your coworkers, or maybe want to setup a continuous integration system, or whatever else, and for that your need to create a remote repository which will act as reference for all the actors of your project.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s quite easy to do, actually. First thing you need to do is to create a &lt;em&gt;bare repository&lt;/em&gt; on your remote server. The main difference between a bare repository and a classic one (like the one on your computer), is that the bare repository does not have a working copy checked out, it only have the versionning information (which is in the &lt;code&gt;.git&lt;/code&gt; folder of your local repo).&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s create that remote repo. Connect to your remote host using ssh, and go where you want to store your repo (ie. create a folder named &lt;code&gt;repositories&lt;/code&gt; in your user&amp;rsquo;s home, with a sub-folder named after your project, so the repository path is &lt;code&gt;~/repositories/my-project.git&lt;/code&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir -p ~/repositories/my-project.git
$ cd ~/repositories/my-project.git
$ git init --bare .
Initialized empty Git repository in /home/adrien/repositories/my-project.git/

$ ls -A
branches  config  description  HEAD  hooks  info  objects  refs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s all for the remote repository. Now we need to setup your local repo so you can push your commits to your newly created repo. We can do that with the following commands, on your local work directory:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd my-repo
$ git add origin your-user@your-host:~/repositories/my-project.git
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And we are done ! Your coworker can now clone your repo from the remote host:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone your-user@your-host:~/repositories/my-project.git
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you plan to have a bunch of git repositories stored here, you might want to check out &lt;a href=&#34;http://gitblit.com/&#34;&gt;GitBlit&lt;/a&gt;, which will allow you to view and manage your git repositories easily, and serve them through http.
It would also be interresting to implement some sort of backup strategy for your repositories.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>How to sync your subtitles with media player classic</title>
      <link>https://aanc.github.io/sync-your-subtitles-with-mpc-hc/</link>
      <pubDate>Sat, 17 May 2014 19:05:36 +0000</pubDate>
      
      <guid>https://aanc.github.io/sync-your-subtitles-with-mpc-hc/</guid>
      <description>&lt;p&gt;Sometimes when you download a video on the internet, you get subtitles on a separate file (ie. from &lt;a href=&#34;http://www.opensubtitles.org/&#34;&gt;Open Subtitles&lt;/a&gt;, &lt;a href=&#34;http://subscene.com/&#34;&gt;Subscene&lt;/a&gt;, &lt;a href=&#34;http://www.addic7ed.com/&#34;&gt;addic7ed&lt;/a&gt;, etc&amp;hellip;), and they are not always perfectly sync&amp;rsquo;ed. If you&amp;rsquo;re using &lt;a href=&#34;http://mpc-hc.org/&#34;&gt;Media Player Classic&lt;/a&gt;, you can fix that pretty easily with its &amp;ldquo;Sub resync&amp;rdquo; feature.  Open your video with Media Player Classic and load your subtitles, then hit &lt;code&gt;ctrl&lt;/code&gt; + &lt;code&gt;6&lt;/code&gt; (or &lt;code&gt;View -&amp;gt; Subresync&lt;/code&gt;) to open the sub-resync console.
Now find a line in the subtitles that match what is being said on the video, right-click the line on the &amp;ldquo;Time&amp;rdquo; colum, and select &lt;code&gt;Current&lt;/code&gt; (or hit &lt;code&gt;F5&lt;/code&gt;). You can see that the timings in the subtitle file have been adjusted.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://aanc.github.io/content/images/2014/May/AirForceOne-MPC-HC.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Best part is that you can save those modifications directly in the subtitle file by going to &lt;code&gt;File -&amp;gt; Save subtitles&lt;/code&gt;, so next time you play that video, you will not have to do that manipulation all over again.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to create a custom RHEL install CD</title>
      <link>https://aanc.github.io/how-to-create-a-custom-rhel-install-cd/</link>
      <pubDate>Thu, 08 May 2014 21:31:12 +0000</pubDate>
      
      <guid>https://aanc.github.io/how-to-create-a-custom-rhel-install-cd/</guid>
      <description>&lt;p&gt;You&amp;rsquo;ll need the RHEL standard installation ISO as a base, but you probably have it in one form or another if you&amp;rsquo;re reading this guide &amp;hellip;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Mount the ISO somewhere&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir /mnt/rhelcd
mount /path/to/rhel-dvd.iso /mnt/rhelcd -o loop
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Copy the content of the disk somewhere on your hard drive, so we can work on it and make our modifications.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir ~/workdir
cp /mnt/rhelcd/* ~/workdir
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note: There are a few dotfiles in the disk, so don&amp;rsquo;t forget them, as depending on your system setup they might not be copied along when you perform the &lt;code&gt;cp&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Create your kickstart file, describing your installation. I will not cover the creation of that file in that guide, but you can find plenty of information about that &lt;a href=&#34;https://www.google.fr/search?q=how+to+create+kickstart+file&amp;amp;oq=how+to+create+kickstart+file&amp;amp;aqs=chrome..69i57j0l5.4759j0j7&amp;amp;sourceid=chrome&amp;amp;es_sm=119&amp;amp;ie=UTF-8&#34;&gt;on the internets&lt;/a&gt;. Let me know in the comments if you feel that I should add a guide for creating the kickstart file here though.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You can now put the kickstart file in the workdir. I like to create a dedicated folder where I put all the custom stuff I plan to add to the installation (rpms, binairies, config files, &amp;hellip;), but feel free to put it right in the root directory if you prefer.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;workdir
‚îú‚îÄ‚îÄ nknu
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ bin
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ some-binary-file-1
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ some-binary-file-2
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ kickstart.cfg
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ rpms
‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ a-nice-rpm
‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ another-rpm
‚îî‚îÄ‚îÄ ...
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Edit the file &lt;code&gt;isolinux/isolinux.cfg&lt;/code&gt; and change the following lines:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;label linux
menu label ^Install or upgrade an existing system
menu default
kernel vmlinuz
append initrd=initrd.img
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;label linux
menu label ^Install or upgrade an existing system
menu default
kernel vmlinuz
append initrd=initrd.img ks=cdrom://nknu/kickstart.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Make sure your label is either the default one or the only one, if you want the installation to be 100% unattended.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;You can now rebuild the ISO image with your modifications by launching the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~/workdir
mkisofs -o ~/my-custom-rhel-cd.iso -b isolinux/isolinux.bin -c isolinux/boot.cat --no-emul-boot --boot-load-size 4 --boot-info-table -J -R -V disks .
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Burn the newly created &lt;code&gt;~/my-custom-rhel-cd.iso&lt;/code&gt; file on a CD (or just use it in a VM), and you&amp;rsquo;re done !&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This should work for CentOS too, but I did not try.&lt;/p&gt;

&lt;p&gt;Thanks for reading !&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 14.04 Exchange configuration, with Thunderbird and Pidgin</title>
      <link>https://aanc.github.io/ubuntu-14-04-exchange-configuration-thunderbird-pidgin/</link>
      <pubDate>Wed, 23 Apr 2014 22:49:27 +0000</pubDate>
      
      <guid>https://aanc.github.io/ubuntu-14-04-exchange-configuration-thunderbird-pidgin/</guid>
      <description>

&lt;p&gt;A lot of companies are using Microsoft&amp;rsquo;s Exchange for their communications, with Outlook for the mails/agenda and Lync for instant messaging, and those are common blocking points when one want to switch to Linux on his primary work computer. An easy workaround would be to user Outlook Web Access, but it lacks some features (notifications, desktop integration, &amp;hellip;) and it&amp;rsquo;s not always very convenient (you can&amp;rsquo;t use its advanced features if you&amp;rsquo;re using Chrome for example). However it is possible to have a fully functionnal mail/calendar/IM on Linux, able to connect to the Exchange ecosystem of your company, using Davmail as a gateway, Thunderbird as email and agenda client, and pidgin as instant messenging client. Let&amp;rsquo;s see how we can do that on an Ubuntu 14.04.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#davmail&#34;&gt;Davmail: the bridge between two worlds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#thunderbird&#34;&gt;Thunderbird: our new Outlook&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#mail&#34;&gt;Mail&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#agenda&#34;&gt;Agenda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#address-book&#34;&gt;Address book&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pidgin&#34;&gt;Replacing Lync with Pidgin&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;span-id-davmail-davmail-the-bridge-between-two-worlds-span&#34;&gt;&lt;span id=&#34;davmail&#34;&gt;Davmail: the bridge between two worlds&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;The first thing we have to do is to find a way to communicate with the Exchange server. That&amp;rsquo;s what &lt;a href=&#34;http://davmail.sourceforge.net/&#34;&gt;DavMail&lt;/a&gt; do. According to its official website:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;DavMail is a POP/IMAP/SMTP/Caldav/Carddav/LDAP exchange gateway allowing users to use any mail/calendar client (e.g. Thunderbird with Lightning or Apple iCal) with an Exchange server, even from the internet or behind a firewall through Outlook Web Access. DavMail now includes an LDAP gateway to Exchange global address book and user personal contacts to allow recipient address completion in mail compose window and full calendar support with attendees free/busy display.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First thing we need to do is to install it. You can get it &lt;a href=&#34;http://sourceforge.net/projects/davmail/files/&#34;&gt;from its official download page&lt;/a&gt;. Once downloaded, install it by either double clicking the file, or by opening a terminal and typing:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dpkg -i davmail_4.4.1-2225-1_all.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;(Replace the version with the actual version of the file you downloaded)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Once installed, you can open it from the Dash (hit &lt;code&gt;Super&lt;/code&gt; and then type &amp;ldquo;Davmail&amp;rdquo;) or from the console (just type &lt;code&gt;davmail&lt;/code&gt;). You can keep the default settings for everything except the &amp;ldquo;URL OWA (Exchange)&amp;rdquo; field, where you need to put your Outlook Web Access URL.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span id=&#34;find-out-owa-url&#34;&gt;&lt;strong&gt;Finding out your OWA URL:&lt;/strong&gt;&lt;/span&gt; you can ask your admin, or try to guess it with trial and error: depending on your version of Exchange it should be something like &lt;code&gt;https://&amp;lt;domain.net|server&amp;gt;/exchange&lt;/code&gt; or &lt;code&gt;https://&amp;lt;domain.net|server&amp;gt;/owa&lt;/code&gt;. You can find which server/domain you need to use by digging into your Outlook properties. In the latest version of Outlook, you may find this information by clicking on the &amp;ldquo;File&amp;rdquo; tab in the top left corner of the ribbon, then &amp;ldquo;Information&amp;rdquo;. If it&amp;rsquo;s not there and you&amp;rsquo;re using Lync, you can right-click on its tray icon and select &amp;ldquo;Configuration informations&amp;rdquo;, it will open a windows full of information, and if you go to the &amp;ldquo;EWS URL&amp;rdquo; line, you&amp;rsquo;ll see which server you need to connect to.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;https://aanc.github.io/content/images/2014/Apr/davmail-config-1.png&#34; alt=&#34;Davmail - configuration&#34; /&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Hit the save button, and we&amp;rsquo;re done ! You should see a popup saying that Davmail is running.&lt;/p&gt;

&lt;p&gt;Note that if you have other people in your organization willing to use davmail as well, you can install on a server and configure it once and for all so everyone can use it.
If you&amp;rsquo;re installing it only for you though, and on your local machine, you&amp;rsquo;ll certainly want it to start with your session. Ubuntu has a dedicated tool for managing startup application, called &amp;hellip; &amp;ldquo;Startup applications&amp;rdquo;. Open the Dash and type &amp;ldquo;Startup applications&amp;rdquo;, create a new entry named &amp;ldquo;Davmail&amp;rdquo; and just enter &amp;ldquo;davmail&amp;rdquo; in the command field.&lt;/p&gt;

&lt;h3 id=&#34;span-id-thunderbird-thunderbird-our-new-outlook-span&#34;&gt;&lt;span id=&#34;thunderbird&#34;&gt;Thunderbird: our new Outlook&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.mozilla.org/fr/thunderbird/&#34;&gt;Thunderbird&lt;/a&gt; is pre-installed on Ubuntu 14.04. If it&amp;rsquo;s not installed on your distribution, you can find out how to get it on its &lt;a href=&#34;http://www.mozilla.org/fr/thunderbird/&#34;&gt;official website&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;span-id-mails-mails-span&#34;&gt;&lt;span id=&#34;mails&#34;&gt;Mails&lt;/span&gt;&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Open Thunderbird&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;File ‚àí&amp;gt; New -&amp;gt; Existing mail account ...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fill in the name, email and password fields&lt;/li&gt;
&lt;li&gt;Click the &amp;ldquo;Manual configuration&amp;rdquo; button, and fill in the fields as follow (adapt the following values if you modified the davmail configuration):

&lt;ul&gt;
&lt;li&gt;Incoming:

&lt;ul&gt;
&lt;li&gt;Type: IMAP&lt;/li&gt;
&lt;li&gt;Server: localhost&lt;/li&gt;
&lt;li&gt;Port: 1143&lt;/li&gt;
&lt;li&gt;SSL: None&lt;/li&gt;
&lt;li&gt;Authentication: normal password&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Outgoinh:

&lt;ul&gt;
&lt;li&gt;Type: SMTP&lt;/li&gt;
&lt;li&gt;Server: localhost&lt;/li&gt;
&lt;li&gt;Port: 1025&lt;/li&gt;
&lt;li&gt;SSL: None&lt;/li&gt;
&lt;li&gt;Authentication: normal password&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Username: your Exchange username, usually what&amp;rsquo;s before the &amp;lsquo;@&amp;rsquo; in your email address (but not necessarily). Basically it&amp;rsquo;s the username you&amp;rsquo;re using to login into OWA.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;Test&amp;rdquo;, and if everything is OK you should be able to click &amp;ldquo;Done&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://aanc.github.io/content/images/2014/Apr/thunderbird-mail-account-setup.png&#34; alt=&#34;Thunderbird mail account creation&#34; /&gt;&lt;/p&gt;

&lt;p&gt;At this point Thunderbird should start to fetch your emails from the server, and you should see them appear in your inbox.&lt;/p&gt;

&lt;h4 id=&#34;span-id-agenda-agenda-span&#34;&gt;&lt;span id=&#34;agenda&#34;&gt;Agenda&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;For the calendar, we&amp;rsquo;re going to use the following Thunderbird extensions: &lt;strong&gt;Lightning&lt;/strong&gt;, which adds agenda capabilities to Thunderbird, and &lt;strong&gt;ExchangeCalendar&lt;/strong&gt;, which allow to connect directly to Exchange calendars.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In Thunderbird, to to &lt;code&gt;Tools -&amp;gt; Addons&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use the search field to search for &amp;ldquo;Lightning&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Install it&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now we need to install ExchangeCalendar. It seems that the version available in the store is obsolete. The version used for this guide is 3.2.0-Beta77, if you can&amp;rsquo;t find it in the store (3.2.0-Beta77 or above), I&amp;rsquo;d suggest to download it directly from &lt;a href=&#34;http://www.1st-setup.nl/wordpress/?page_id=551&#34;&gt;this page&lt;/a&gt;.
Once downloaded, go back to &lt;code&gt;Tools -&amp;gt; Addons&lt;/code&gt;, click on the little toolbox right before the search area, select &amp;ldquo;Install from file&amp;rdquo;, and then navigate to the .xpi file you juste downloaded.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://aanc.github.io/content/images/2014/Apr/thunderbird-install-addon-from-file.png&#34; alt=&#34;Thunderbird - Install from file&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Once those two addons are installed, go back to Thunderbird&amp;rsquo;s main window and perform the following actions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go to &lt;code&gt;File -&amp;gt; New -&amp;gt; Calendar&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;On the network&amp;rdquo;, then click next&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;Microsoft Exchange 2007/2010/2013&amp;rdquo;, then click next&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://aanc.github.io/content/images/2014/Apr/thunderbird-add-calendar.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Give a name to the calendar, then click next&lt;/li&gt;
&lt;li&gt;Fill in the fields as follow:

&lt;ul&gt;
&lt;li&gt;Server URL: your EWS URL. You can find it out with &lt;a href=&#34;#find-out-owa-url&#34;&gt;the method used for finding our OWA URL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mailbox name: your email address&lt;/li&gt;
&lt;li&gt;User: your username (the one you use to login into OWA)&lt;/li&gt;
&lt;li&gt;Domain: your company&amp;rsquo;s domain&lt;/li&gt;
&lt;li&gt;Shared folder: leave that field empty&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Click the &amp;ldquo;Verify&amp;rdquo; button, and if everything is OK hit &amp;ldquo;Next&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://aanc.github.io/content/images/2014/Apr/thunderbird-new-calendar-2-1.png&#34; alt=&#34;Thunderbird - Agenda configuration box&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The calendar should now appear in the &amp;ldquo;Agenda&amp;rdquo; tab of Thunderbird.&lt;/p&gt;

&lt;h4 id=&#34;span-id-address-book-address-book-span&#34;&gt;&lt;span id=&#34;address-book&#34;&gt;Address book&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;If your company is using LDAP for the address book, you can configure Thunderbird to use if with the following steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In the Thunderbird toolbar, click the &amp;ldquo;Address Book&amp;rdquo; button.&lt;/li&gt;
&lt;li&gt;In the Address Book window, click &lt;code&gt;File -&amp;gt; New -&amp;gt; LDAP Directory&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;You may need to ask your administrator to give you the hostname and the Base DN&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;OK&amp;rdquo;, and verify that you can successfully search people in the Address Book&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://aanc.github.io/content/images/2014/Apr/thunderbird-address-book-ldap-config.png&#34; alt=&#34;Thunderbird - Address Book LDAP config&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Once done, you can enable the address auto-completion when writing message in Thunderbird&amp;rsquo;s preferences window (&lt;code&gt;Edit -&amp;gt; Preferences&lt;/code&gt;): in the &amp;ldquo;Composition&amp;rdquo; tab, check &amp;ldquo;Directory Server&amp;rdquo; then select the address book you just added.&lt;/p&gt;

&lt;h3 id=&#34;span-id-pidgin-replacing-lync-with-pidgin-span&#34;&gt;&lt;span id=&#34;pidgin&#34;&gt;Replacing Lync with pidgin&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;In order to have instant messenging available on our linux box, we&amp;rsquo;re going to use pidgin, with the pidgin-sipe plugin (to enable Exchange capabilities), and optionnaly pidgin-libnotify (to have a better integration into our Ubuntu 14.04).&lt;/p&gt;

&lt;p&gt;You will need to gather info from your Windows&amp;rsquo;s Lync setup, by right-clicking on its tray icon and opening the &amp;ldquo;Configuration Informations&amp;rdquo;. From this window, get the server name, you&amp;rsquo;ll need it to setup pidgin.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://aanc.github.io/content/images/2014/Apr/pidgin-1.png&#34; alt=&#34;Lync - config info 1&#34; /&gt;
&lt;img src=&#34;https://aanc.github.io/content/images/2014/Apr/pidgin-2.png&#34; alt=&#34;Lync - config info 2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;If pidgin is not installed on your system, you can install it via the Ubuntu Software Center simply by searching for it, or by opening a terminal and typing:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install pidgin pidgin-sipe pidgin-libnotify
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Launch pidgin, and go to &lt;code&gt;Account -&amp;gt; Manage -&amp;gt; Add ...&lt;/code&gt;, and fill in the fields as follow:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tab &amp;ldquo;Essential&amp;rdquo;:

&lt;ul&gt;
&lt;li&gt;Protocol: Office communicator&lt;/li&gt;
&lt;li&gt;User: your email address&lt;/li&gt;
&lt;li&gt;Login: the login you use to access OWA&lt;/li&gt;
&lt;li&gt;Password: your password for that account&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Tab &amp;ldquo;Advanced&amp;rdquo;:

&lt;ul&gt;
&lt;li&gt;Server: the server you found in your Lync settings&lt;/li&gt;
&lt;li&gt;Connection type: Auto&lt;/li&gt;
&lt;li&gt;Encryption: TSL-DSK&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Tab &amp;ldquo;Proxy&amp;rdquo;:

&lt;ul&gt;
&lt;li&gt;Type: No proxy&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Save and connect, you should see your contact list appear.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; in all my boxes (on Lubuntu 13.10 and Ubuntu 14.04), I&amp;rsquo;ve never managed to have pidgin work without setting the &lt;code&gt;NSS_SSL_CBC_RANDOM_IV&lt;/code&gt; environment variable to 0. Without this variable, I always got a &amp;ldquo;&lt;strong&gt;Read Error&lt;/strong&gt;&amp;rdquo; at connection.
To set this variable, edit your ~/.profile file and add the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# SSL config for pidgin
export NSS_SSL_CBC_RANDOM_IV=0`
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will have to logout/login for this parameter to take effect.&lt;/p&gt;

&lt;p&gt;And that&amp;rsquo;s it ! Let me know in the comments if something does not work, of if you have a better method. Thanks for reading!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 14.04 proxy config with authentication</title>
      <link>https://aanc.github.io/ubuntu-14-04-proxy-authentication-config/</link>
      <pubDate>Wed, 16 Apr 2014 21:05:11 +0000</pubDate>
      
      <guid>https://aanc.github.io/ubuntu-14-04-proxy-authentication-config/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Updated the 07 Aug 2014:&lt;/strong&gt; added autoconfig URL settings&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re behind a company proxy, chances are that you need to use proxy authentication to have access to the outside world. The thing is that in Ubuntu, the default proxy configuration interface does not let you enter any credential, only the proxy address.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://aanc.github.io/content/images/2014/Apr/network_config.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You have several options to work arround that.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Some applications don&amp;rsquo;t respect the settings defined by those methods. In that case, you&amp;rsquo;ll have to refer to their documentation to configure the proxy.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;1-the-apt-get-click-ish-way&#34;&gt;1. The apt-get/click&amp;rsquo;ish way&lt;/h3&gt;

&lt;p&gt;Install the package &lt;code&gt;dconf-editor&lt;/code&gt; (using the Ubuntu Software Center or simply typing &lt;code&gt;sudo apt-get install dconf-editor&lt;/code&gt; in your terminal), and open it (hit &lt;code&gt;alt-F2&lt;/code&gt; then type &lt;code&gt;dconf-editor&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;In the dconf Editor window, go to &lt;code&gt;dconf-editor -&amp;gt; system -&amp;gt; proxy -&amp;gt; http&lt;/code&gt; and configure your username and password.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://aanc.github.io/content/images/2014/Apr/proxy_config.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;If you have local domains/ip/masks you don&amp;rsquo;t want to use the proxy with, you can configure them in the &lt;code&gt;dconf-editor -&amp;gt; system -&amp;gt; proxy&lt;/code&gt; window, in the &lt;code&gt;ignore-hosts&lt;/code&gt; field. For example if your company use an internal network name &lt;code&gt;mycompany.lan&lt;/code&gt;, you can add &lt;code&gt;*.mycompany.lan&lt;/code&gt; to avoid using the proxy when accessing this domain.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://aanc.github.io/content/images/2014/Apr/no_proxy.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Note that if your network provides an autoconfig script, you can use it here. Set the &lt;code&gt;mode&lt;/code&gt; to &lt;code&gt;auto&lt;/code&gt;, and enter the URL of the autoconfig script ing the &lt;code&gt;autoconfig-url&lt;/code&gt; field. When you use the &lt;code&gt;auto&lt;/code&gt; mode, every other setting exept &lt;code&gt;autoconfig-url&lt;/code&gt; is ignored. If you have a windows box autoconfigured on the same network, an easy way to get the autoconfig URL is to open chrome and type &lt;code&gt;chrome://net-internals/#proxy&lt;/code&gt; in the URL bar. The &lt;code&gt;PAC script&lt;/code&gt; line is what you&amp;rsquo;re looking for:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://aanc.github.io/content/images/2014/Aug/proxy-autoconfig-url.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-the-console-ish-way&#34;&gt;2. The console&amp;rsquo;ish way&lt;/h3&gt;

&lt;p&gt;If you don&amp;rsquo;t want to use dconf-editor, or if you use another flavor of Linux, your can use this second method.&lt;/p&gt;

&lt;p&gt;Create a &lt;code&gt;.proxy&lt;/code&gt; file in your home directory. Have it only read/write-able by yourself, as we will store your credentials in there (including your password).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;touch ~/.proxy
chmod 600 ~/.proxy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Open it with your favorite text editor and add the following content, replacing &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;proxy_hostname&lt;/code&gt; and &lt;code&gt;proxy_port&lt;/code&gt; by their actual values:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Proxy config
export http_proxy=&#39;username:password@http://proxy_hostname:proxy_port&#39;
export no_proxy=‚Äôlocalhost,127.0.0.1,.mycompany.lan‚Äô

export https_proxy=$http_proxy
export HTTP_PROXY=$http_proxy
export HTTPS_PROXY=$http_proxy
export NO_PROXY=$no_proxy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With that option, the &lt;code&gt;no_proxy&lt;/code&gt; variable let you set a list of IP/mask/domains to ignore. Note that the domain syntax is slightly different than the dconf-editor one: only &lt;code&gt;.mycompany.net&lt;/code&gt; withouth any wildcard.&lt;/p&gt;

&lt;p&gt;Edit your &lt;code&gt;~/.profile&lt;/code&gt; file and add the following lines, which will load the content of the file we just created when you start your session.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# include proxy config if it exists
if [ -f $HOME/.proxy ]; then
    . $HOME/.proxy
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Log out and log back in, and your proxy settings should be taken into account.&lt;/p&gt;

&lt;p&gt;Note that APT does not respect this setup. In order to have it use your proxy, you will have to edit the &lt;code&gt;/etc/apt/apt.conf&lt;/code&gt; file (create it if it does not exist) and add the following line:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Acquire::http::Proxy &amp;quot;http://username:password@my.proxy.host:port&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Optionnal step&lt;/strong&gt;: if you want your proxy setting to be propagated when you&amp;rsquo;re using sudo, open the sudo config file with &lt;code&gt;sudo visudo&lt;/code&gt; and add the following line after the other &lt;code&gt;Defaults&lt;/code&gt; lines:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Defaults    env_keep += &amp;quot;http_proxy https_proxy no_proxy&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I hope it helped !&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>